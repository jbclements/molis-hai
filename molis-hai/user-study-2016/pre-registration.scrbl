#lang scribble/base

@title{Pre-Registration}

Strictly speaking, this is not pre-registration.

Specifically, as of this writing,
We have in fact begun (and nearly finished) data collection,
and we have begun to look at the data. Indeed, it's mere happenstance
that we learned of the Open Science Foundation, and we consider ourselves
lucky to have encountered the foundation before serious analysis had
begun.

Fortunately, most of the following text comes directly from our
Human Subjects approval, and predates all collection of data.
The section entitled @secref["analysis-plan"] does not, though, as we
note again at the beginning of that section.

@section{Project Description}

Last year we devised a an algorithm called Molis Hai for generating random
passwords in a way that increases memorability without compromising
randomness. Our hypothesis is that these passwords are easier to
learn and remember than passwords generated using a more traditional technique.

For instance, a traditionally generated 56-bit random password expressed
as a hexadecimal sequence might be:
@verbatim{b084f9b9 466bd7}
and the corresponding Molis Hai password would be:
@verbatim{deathe dear sheld prom}
We conjecture that the second one is more memorable than the first.

If the hypothesis holds, this should make it (more) possible to use
random passwords in settings where users are currently choosing
their own (generally terrible) passwords.

Our plan is to test the memorability of these passwords using a spaced
repetition tool that requires students to enter these passwords on
several occasions, spaced by several days each time, and to measure
the ability of the students to recall the password after the passage
of this time.

@section{Methods}

@subsection{Subjects}

Subjects will be students currently taking one or more specific classes at Cal
Poly (e.g., students currently enrolled in CPE430). Students are expected to
be a representative sample of the currently enrolled upper-level Computer Science
and Software Engineering students.

@subsection{Experimenters}

John Clements. Relevant qualifications: history of educational research.

@subsection{Materials}

At the beginning of approximately twenty labs during a single quarter, students
will be asked to spend approximately one minute using a computer-based
application designed to train them to type a particular password.  Here's
a screenshot of the tool in use:

@image[#:scale 0.4 "screenshot.png"]

Please note that no deception will be a part of this experiment: students will
know that they are participating in a study on password memorability.

The tool will collect information on the students' password attempts, and associate
them with anonymized ids. After the completion of the collection, the mapping from
student names to ids will be destroyed, ensuring that student attempts cannot be
linked to the student names.

We have no current plans to debrief students, though we do hope to share the
results with any interested students.

@section[#:tag "analysis-plan"]{Analysis Plan}

We should note, first, that this section, unlike the others, does @emph{not}
predate the collection of data. The section labeled @secref["earlyview"] describes
the observations that we performed prior to writing this plan.

@subsection{Data Gathered}

The experiment consists of a sequence of training sessions, spaced over
five weeks. The subjects are students in the investigator's upper-level
programming languages class. Each student (that didn't opt out of the
study) participates in a short training session at the beginning of each
lab section over the course of five weeks, for a total of fourteen sessions.
The sessions take place on mondays, wednesdays, and fridays, starting on
a wednesday, with the exception of the third week, on which monday was
a holiday and tuesday took its place.

There are seventy students eligible to participate.

Students have the option of opting out of the study altogether, and
many of them have already missed one or more lab sessions.

The students have been randomly assigned to the experimental group or the control group.
More specifically, we hashed the student ids with randomly generated salt, and
chose a particular bit that provided an even split of the class. Each student
in the control group is assigned a fixed 56-bit training string (password candidate)
generated by choosing
a set of independent characters from a pool. Examples of such passwords
include:

@verbatim|{
hch-ii+Lu
nq%,{(Lhq
DXWpp2UD1
PM5vY0XEs
aG$WPhNT5
,5/SHR+KYh
)1H1mp{*3N
5c4S6xQ5h
}|

Each student in the experimental group is assigned a fixed 56-bit password generated
using the Molis Hai algorithm, using an order-2 model based on Charles Dickens'
@emph{A Tale of Two Cities}. Examples of such passwords include:

@verbatim{
st of an the yin peared
Youlasualoon ticu
me itteat that hint b
offick, streursperc
hen, trach hurseep o
din mands of josero
sered nis The thishr
agaidearragothis andr
}

Each student's training session involves typing her or his training string
five times using a web page / JavaScript applet designed for the purpose. The
first and fifth times, the student is unable to see the correct string,
while during the second, third, and fourth, the student can see the correct
string @emph{and} receives per-character dynamic feedback, whereby a correct character
results in the coloring of a square green, and an incorrect character results
in the coloring of a square red. The screenshot above shows the tool in action.

Since the first test is performed without a prompt, it serves as our primary
measure of learning. If a student types the string correctly without a prompt,
she or he might be said to have learned it.

The applet logs all keystrokes, and associates each one with a timestamp and
a session ID,
allowing a full reconstruction of the characters typed by each student into
each box.

@subsection[#:tag "earlyview"]{Early view of data}


As of this writing, we have
examined a density graph of student participation, pictured here:


@image[#:scale 0.4 "log-density.pdf"]

...and also this graph of individual log times:

@image[#:scale 0.4 "individual-log-times.pdf"]

...and finally, this preliminary overview of mistakes made, including a separation of
the two experimental groups:

@subsection{Missing Data}

This data is likely to present serious challenges to analysis in the
form of missing data.

Specifically, many students missed many lab sections. Additionally, the
interval enforced by the tool (44 hours) allowed students to choose to
participate somewhat more frequently, if they were diligent.

However, we have no reason to believe that those from the experimental
group were any more or less likely to engage in this behavior, and we
feel comfortable analyzing each student's training track as an extended
sequence of training sessions, as described below.

@subsection{Detailed Hypotheses and tests}

We have two hypotheses: that the experimental strings are easier to learn, and
that they are retained better. In order to address the issue of multiple
comparisons, we plan to use a simple Bonferroni correction to ensure
statistical significance for the two tests performed.

@subsubsection{Easier to Learn}

The first basic hypothesis is that the molis hai passwords are easier to learn than
those from the control group.

In order to test this, we plan to fit a simple two-piece linear model to each
participant's history.

More specifically, for each student, for each training session, we will take the
first and fifth password attempts (the ones without prompts), and compute the
levenshtein distance between the attempt and the correct string, divided by
the length of the string. This measures the relative error: 100% would correspond
to an entirely incorrect password, and 0% to a perfectly correct one.

Placing all of a student's results on a graph where the independent variable
is seconds since the beginning of the experiment (so, in the case of the second
week, we would have values that are approximately (7 * 86,400), and to fit a
two-piece linear function. Specifically, this function starts at 100% error at
time zero, and proceeds linearly to a point of 0% error, and is 0% forever
after. This corresponds to an extremely simplified learning model, whereby
students learn a password steadily and then retain it indefinitely. Despite
the simplicity of the model, we see no reason why it should be biased toward
either the control or the experimental group (though perhaps we will, after
we see the data).

To be more precise, the model is a single-parameter one, described by:

       / 1 - (1/l)t   when t <= l
f(t) = - 0            otherwise

The parameter 'l' describes the number of seconds taken to learn the string.

For each student, we will discover the value of 'l' that minimizes the mean-squared
error.

After discovering the best-fit 'l' for each student, we will compare the distribution
of values of 'l' for the control and experimental group, to see whether these
can plausibly be drawn from the same underlying population distribution.

Note that we do not expect the distribution of 'l' values to be normal. In
particular, we expect that some students will not make substantial progress
toward memorizing their passwords or will simply give up, resulting a a
sizeable subpopulation for which 'l' will be on the order of months or
years.

We plan to discard data from any student that failed to complete at least
three training sessions.

@subsubsection{Retained better}

The real test for a password is not how long it takes to learn it; it is
how well it is remembered. Naturally, these two are nearly perfectly
correlated--learning a password requires not forgetting it during the
four-week training period.  However, we can imagine that certain
passwords might more easily slip away during a period of extended
disuse.

To test this, we plan to ask the students to produce their
passwords during the class final exam, after a gap of approximately two weeks
since their last training session. Naturally, the question would
have no test credit associated with it.

We plan to take the levenshtein distance from this final attempt to the
training string, and compare it to the levenshtein distance from the student's
prior training session. Our hypothesis is that the students in the experimental
group will retain their strings at a higher rate. We expect to be able to
measure this with a single-tailed t-test.

Once again, we plan to discard data from any student that failed to complete
at least three training sessions.

@section{Further Information}

For further information on the password generation algorithm,
refer to our ArXiv publication:

@itemlist[
@item{Clements, John. ``Generating 56-bit passwords using Markov Models (and Charles Dickens),''
available online at @url{http://arxiv.org/abs/1502.07786}}]
